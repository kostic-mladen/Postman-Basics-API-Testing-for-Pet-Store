{
	"info": {
		"_postman_id": "f158bf3e-2e9a-442a-9e3c-9d23708bae2a",
		"name": "Homework1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23445469"
	},
	"item": [
		{
			"name": "PET",
			"item": [
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Name assertion\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"dog\");\r",
									"});\r",
									"pm.test(\"Status assertion\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"pm.environment.set(\"petID\", pm.response.json().id)\r",
									"pm.environment.set(\"name\", pm.response.json().name)\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Cezar\"\r\n  },\r\n  \"name\": \"dog\",\r\n  \"photoUrls\": [\r\n    \"dog.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 30,\r\n      \"name\": \"dog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"petID\", pm.response.json().id)\r",
									"\r",
									"pm.test(\"Status assertion\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name assertion\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"cat\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"name\", pm.response.json().name)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Garfild\"\r\n  },\r\n  \"name\": \"cat\",\r\n  \"photoUrls\": [\r\n    \"cat.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 31,\r\n      \"name\": \"cat\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PetID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet byStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}/{{status}}?status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}",
								"{{status}}"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet in form data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete PetID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get PetID after Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Pet not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{petResource}}/{{petID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{petResource}}",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/STEMARK TAHOGRAF DOO/Desktop/dog.jpg"
								},
								{
									"key": "metadata",
									"value": "dog",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/2/uploadImage",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"2",
								"uploadImage"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "STORE",
			"item": [
				{
					"name": "Order a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"orderID\", pm.response.json().id)\r",
									"\r",
									"pm.test(\"Status code is 2000\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"ID assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(6);\r",
									"});\r",
									"pm.test(\"PetID assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.petId).to.eql(2);\r",
									"});\r",
									"pm.test(\"Quantity assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.quantity).to.eql(1);\r",
									"});\r",
									"pm.test(\"Status assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 2,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2023-01-25T21:08:54.764Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{storeResource}}/{{orderResource}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{storeResource}}",
								"{{orderResource}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet by OrderID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2000\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"ID assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(6);\r",
									"});\r",
									"pm.test(\"PetID assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.petId).to.eql(2);\r",
									"});\r",
									"pm.test(\"Quantity assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.quantity).to.eql(1);\r",
									"});\r",
									"pm.test(\"Status assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{storeResource}}/{{orderResource}}/{{orderID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{storeResource}}",
								"{{orderResource}}",
								"{{orderID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 2000\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"6\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{storeResource}}/{{orderResource}}/{{orderID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{storeResource}}",
								"{{orderResource}}",
								"{{orderID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get invenory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{storeResource}}/{{inventoryResource}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{storeResource}}",
								"{{inventoryResource}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "Create User with Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 1,\r\n    \"username\": \"suitor\",\r\n    \"firstName\": \"mladen\",\r\n    \"lastName\": \"kostic\",\r\n    \"email\": \"mladja@gmail.com\",\r\n    \"password\": \"Bootcamp22\",\r\n    \"phone\": \"063\",\r\n    \"userStatus\": 0\r\n  }\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userResource}}/{{array}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userResource}}",
								"{{array}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User with List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 1,\r\n    \"username\": \"suitor\",\r\n    \"firstName\": \"mladen\",\r\n    \"lastName\": \"kostic\",\r\n    \"email\": \"mladja@gmail.com\",\r\n    \"password\": \"Bootcamp22\",\r\n    \"phone\": \"063\",\r\n    \"userStatus\": 200\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userResource}}/{{list}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userResource}}",
								"{{list}}"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Message assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"id\": 1,\r\n    \"username\": \"suitor\",\r\n    \"firstName\": \"mladen\",\r\n    \"lastName\": \"kostic\",\r\n    \"email\": \"mladja@gmail.com\",\r\n    \"password\": \"Bootcamp22\",\r\n    \"phone\": \"063\",\r\n    \"userStatus\": 200\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userResource}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userResource}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{userResource}}/{{Login}}?username={{username}}&password={{password}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userResource}}",
								"{{Login}}"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Code assertation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{userResource}}/{{Logout}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userResource}}",
								"{{Logout}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}